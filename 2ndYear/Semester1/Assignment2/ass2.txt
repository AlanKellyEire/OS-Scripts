#!/bin/bash# Assignment 2 Alan Kelly r00052131 DNet2if (( "${#}" != 2)) #if there are less or more than 2 arguments alerts user with error and stops programthen #then we need to tell the user we expect the source directory and new destination directory in that order.	echo "${0}: ERROR: Incorrect number of arguments entered." 1>&2 # dump everything to standard error output, which in normal cases means the screen.	echo "${0}: USAGE: ${0} <source directory> <new destination directory>" 1>&2	exit 8 #kill program with status 8fiif [[ ! -d "${1}" ]] #if the first argument is not a directory alerts user with error and stops programthen	echo "${0}: ERROR: directory ${1} does not exist." 1>&2	echo "${0}: USAGE: ${0} <source directory> <new destination directory>" 1>&2	exit 7fiif test  -d "${2}" #if the second argument is a directory alerts user with error and stops programthen	echo "${0}: ERROR: directory ${2} already exists." 1>&2	echo "${0}: USAGE: ${0} <source directory> <new destination directory>" 1>&2	exit 6fiif test -f "${2}"then #if second argument exist as a file alerts user with error and stops program	echo "${0}:ERROR:${2} is a file not a directory" 1>&2	echo "${0}:USAGE:Enter the name of an existing directory for the destination ." 1>&2	exit 5fiif  test ! -e "${2}"then  # if directory entered does not exist as a file	if ! mkdir "${2}" 2>/dev/null 	then  # if not created alerts user with error, stops program & dump any error messages		echo "${0}:ERROR:Failed to create ${2}" 1>&2		echo "${0}:INFO:Check permissions or disk space." 1>&2		exit 4	fifitypeset -i success=0 #declare an integer variable called success & initialise it to 0typeset -i fail=0 #declare an integer variable called fail & initialise it to 0for f in $(ls "${1}") #for each file f in the directory do	if [[ -f "${1}/${f}" ]]  #if that file f is ordinary	then 		if cp ${1}/${f} ${2}		then			((success++))		else 			echo "${0}:WARNING:File ${f} could not be copied to ${2}" 1>&2			((fail++))		fi		fidoneif (( fail == 0 && success == 0 )) #if source directory contains no ordinary files. alerts user and stops programthen	echo "${0}:ERROR: ${1} does not contain ordinary files" 1>&2	echo "${0}:USAGE: Please enter a directory thats contains ordinary files!!!" 1>&2		exit 3fiif (( fail == 0 && success != 0 )) # if number of fails = 0 and number of success not = 0 alerts user all files successfully copied and stops programthen	echo "${0}:All ordinary files from ${1} have been copied to ${2}" 1>&2	exit 2fiif (( fail != 0 && success == 0 )) # if number of success = 0 and fail not = 0 alerts user no files successfully copied and stops program.then	echo "${0}:No ordinary files from ${1} have been copied to ${2}!!!!" 1>&2	exit 1fiif (( fail != 0 && success != 0 )) #if number of success and fail not = 0 alerts user some files successfully copied and stops program.then	echo "${0}:Some ordinary files from ${1} have been copied to ${2}!!!!" 1>&2 	exit 0fi